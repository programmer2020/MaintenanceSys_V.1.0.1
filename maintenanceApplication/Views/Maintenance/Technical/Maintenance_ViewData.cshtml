@model maintenanceApplication.ViewModels.MaintenanceCreteViewModel
@{
    ViewBag.Title = "CreateNewMaintenanceRequest";
}
        <div class="col-md-6">
            <h4 class="text text-info">New Request</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })

            @using (Html.BeginForm("EditMaintenance", "Maintenance"))
            {
                @Html.AntiForgeryToken()
        <div class="form-horizontal">

            @if (User.IsInRole(RolesName.SuperAdmin) || User.IsInRole(RolesName.Technical))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Phone_1, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Phone_1, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Phone_2, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Phone_2, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.CustomerCity.CustomerCity, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.CustomerCity.CustomerCity, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Adress, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Adress, new { htmlAttributes = new { @class = "form-control" } })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Device_SerialNumber, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Device_SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Device_Model, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Device_Model, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Accrssories, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Accrssories, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.ClientRemarks, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.maintenance.ClientRemarks, new { @class = "form-control", @style = "height:200px;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.priority.PriorityName, "Priority Name", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(m => m.maintenance.MaintenancePriorityModelId, new SelectList(Model.maintenancepriority, "Id", "PriorityName"), htmlAttributes: new { @class = "form-control" })
                    </div>

                </div>

                if (User.IsInRole(RolesName.Technical))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.status.StatusName, "Status Name", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.status.StatusName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })

                        </div>
                    </div>
                }
                else if (User.IsInRole(RolesName.SuperAdmin))
                                        {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.status.StatusName, "Status Name", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.maintenance.MaintenanceStatusModelId, new SelectList(Model.maintenancestatus, "Id", "StatusName"), htmlAttributes: new { @class = "form-control" })

                        </div>
                    </div>
                }


                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.userName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.userName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    </div>
                </div>

                if (Model.maintenance.CreationDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.CreationDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.CreationDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.StartCheckingDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.StartCheckingDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.StartCheckingDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.CheckCompleted_Date != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.CheckCompleted_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.CheckCompleted_Date, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.StartReparingDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.StartReparingDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.StartReparingDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.Actual_Repair_Date != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.Actual_Repair_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.Actual_Repair_Date, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.QualityRejectDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.QualityRejectDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.QualityRejectDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.QualityApprovedDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.QualityApprovedDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.QualityApprovedDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.Deliver_Date != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.Deliver_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.Deliver_Date, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

            }
            else if(User.IsInRole(RolesName.Supervisor))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Name, new { htmlAttributes = new { @class = "form-control"} })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Phone_1, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Phone_1, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Phone_2, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Phone_2, new { htmlAttributes = new { @class = "form-control"} })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.CustomerCity.CustomerCity, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.CustomerCity.CustomerCity, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Customer_Adress, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Customer_Adress, new { htmlAttributes = new { @class = "form-control"} })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Device_SerialNumber, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Device_SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Device_Model, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Device_Model, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.Accrssories, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.Accrssories, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.ClientRemarks, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.maintenance.ClientRemarks, new { @class = "form-control", @style = "height:200px;" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.priority.PriorityName, "Priority Name", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(m => m.maintenance.MaintenancePriorityModelId, new SelectList(Model.maintenancepriority, "Id", "PriorityName"), htmlAttributes: new { @class = "form-control" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.status.StatusName, "Status Name", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.status.StatusName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maintenance.userName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.maintenance.userName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                if (Model.maintenance.CreationDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.CreationDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.StartCheckingDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.StartCheckingDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.StartCheckingDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.CheckCompleted_Date != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.CheckCompleted_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.CheckCompleted_Date, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.StartReparingDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.StartReparingDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.StartReparingDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.Actual_Repair_Date != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.Actual_Repair_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.Actual_Repair_Date, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.QualityRejectDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.QualityRejectDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.QualityRejectDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.QualityApprovedDate != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.QualityApprovedDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.QualityApprovedDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }

                if (Model.maintenance.Deliver_Date != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.maintenance.Deliver_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.maintenance.Deliver_Date, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        </div>
                    </div>
                }
            }



            @Html.HiddenFor(model => model.maintenance.Id)
            @Html.HiddenFor(model => model.maintenance.Customer_Name)
            @Html.HiddenFor(model => model.maintenance.Customer_Phone_1)
            @Html.HiddenFor(model => model.maintenance.Customer_Phone_2)
            @Html.HiddenFor(model => model.maintenance.CustomerCity.CustomerCity)
            @Html.HiddenFor(model => model.maintenance.MaintenanceCustomerCityModelId)
            @Html.HiddenFor(model => model.maintenance.Customer_Adress)
            @Html.HiddenFor(model => model.maintenance.CreationDate)
            @Html.HiddenFor(model => model.maintenance.MaintenanceStatusModelId)
            @Html.HiddenFor(model => model.maintenance.Device_Model)
            @Html.HiddenFor(model => model.maintenance.Device_SerialNumber)
            @Html.HiddenFor(model => model.maintenance.Accrssories)
            @Html.HiddenFor(model => model.maintenance.ClientRemarks)
            @Html.HiddenFor(model => model.maintenance.MaintenancePriorityModelId)
            @Html.HiddenFor(model => model.maintenance.TechnicalReport)
            @Html.HiddenFor(model => model.maintenance.Recommendations)
            @Html.HiddenFor(model => model.maintenance.userName)

            <div class="col-md-12" style="margin-bottom:100px;margin-top:30px;margin-left:20%;">
                <div class="cold-md-9">
                    @if (User.IsInRole(RolesName.Technical))
                    {
                        <input type="submit" name="EditMaintenance" class="btn btn-primary" value="Save" id="updateBtn"
                               formaction="/Maintenance/EditMaintenance/@ViewData["mainId"]" formmethod="post" />
                        <input type="submit" class="btn btn-success" formaction="/Maintenance/Start_Checking/@ViewData["mainId"]" value="Start Checking"
                               formmethod="post" />
                        <input type="submit" class="btn btn-danger" formaction="/Maintenance/ReturnMaintenanceRequest/@ViewData["mainId"]" value="Request For Return"
                               formmethod="post" />

                        <input type="submit" class="btn btn-success" formaction="/Report/ReparingCheq/@ViewData["mainId"]" value="Print Recipt"
                               formmethod="post" />

                        <input type="submit" class="btn btn-dark" formaction="/Report/TechnicalReport/@ViewData["mainId"]" value="Technical Report"
                               formmethod="post" />
                        <a href="/Maintenance/GetNewMaintenanceRequests" class="btn btn-warning ">Cancel</a>
                    }
                    else if (User.IsInRole(RolesName.Supervisor))
                    {
                        <input type="submit" name="EditMaintenance" class="btn btn-primary" value="Save" id="updateBtn"
                               formaction="/Maintenance/EditMaintenance/@ViewData["mainId"]" formmethod="post" />

                        <input type="submit" class="btn btn-danger" formaction="/Maintenance/ReturnMaintenanceRequest/@ViewData["mainId"]" value="Request For Return"
                               formmethod="post" />

                        <input type="submit" class="btn btn-success" formaction="/Report/ReparingCheq/@ViewData["mainId"]" value="Print Recipt"
                               formmethod="post" />

                        <input type="submit" class="btn btn-dark" formaction="/Report/TechnicalReport/@ViewData["mainId"]" value="Technical Report"
                               formmethod="post" />
                        <a href="/Maintenance/GetNewMaintenanceRequests" class="btn btn-warning ">Cancel</a>
                    }
                    else if (User.IsInRole(RolesName.SuperAdmin))
                    {

                        <input type="submit" class="btn btn-success" formaction="/Maintenance/Start_Checking/@ViewData["mainId"]" value="Start Checking"
                               formmethod="post" />
                        <input type="submit" class="btn btn-danger" formaction="/Maintenance/ReturnMaintenanceRequest/@ViewData["mainId"]" value="Request For Return"
                               formmethod="post" />

                        <input type="submit" class="btn btn-success" formaction="/Report/ReparingCheq/@ViewData["mainId"]" value="Print Recipt"
                               formmethod="post" />

                        <input type="submit" class="btn btn-dark" formaction="/Report/TechnicalReport/@ViewData["mainId"]" value="Technical Report"
                               formmethod="post" />
                        <a href="/Maintenance/GetNewMaintenanceRequests" class="btn btn-warning ">Cancel</a>
                    }
                </div>
            </div>

        </div>

            }
        </div>

        @{
            try
            {
                Html.RenderAction("GetAllMAintenanceComments", new { id = @ViewData["mainId"] });

            }
            catch
            {

            }
        }   


@*@{
        Html.RenderAction("Add_Maintenance_Comment");
    }*@

@*@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval");
}*@
